<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-07-20T16:37:44+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ANewPro</title><entry><title type="html">pdf嵌入测试</title><link href="http://localhost:4000/2023/07/20/ANewPro-PaperRead2.html" rel="alternate" type="text/html" title="pdf嵌入测试" /><published>2023-07-20T00:00:00+08:00</published><updated>2023-07-20T00:00:00+08:00</updated><id>http://localhost:4000/2023/07/20/ANewPro-PaperRead2</id><content type="html" xml:base="http://localhost:4000/2023/07/20/ANewPro-PaperRead2.html"><![CDATA[<iframe src="https://www.dropbox.com/s/9yriwqohuy1vdvu/The_Graph_Neural_Network_Model.pdf?raw=1" width="100%" height="600px"></iframe>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">第一次发布尝试</title><link href="http://localhost:4000/2023/07/19/ANewPro-paperRead1.html" rel="alternate" type="text/html" title="第一次发布尝试" /><published>2023-07-19T00:00:00+08:00</published><updated>2023-07-19T00:00:00+08:00</updated><id>http://localhost:4000/2023/07/19/ANewPro-paperRead1</id><content type="html" xml:base="http://localhost:4000/2023/07/19/ANewPro-paperRead1.html"><![CDATA[<iframe src="https://docs.google.com/viewer?url=https://www.dropbox.com/s/9yriwqohuy1vdvu/The_Graph_Neural_Network_Model.pdf?dl=1&amp;embedded=true" width="100%" height="600px"></iframe>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">How to use Multiple Images in a Carousel</title><link href="http://localhost:4000/2020/03/02/friday-theme-carousel.html" rel="alternate" type="text/html" title="How to use Multiple Images in a Carousel" /><published>2020-03-02T00:00:00+08:00</published><updated>2020-03-02T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/02/friday-theme-carousel</id><content type="html" xml:base="http://localhost:4000/2020/03/02/friday-theme-carousel.html"><![CDATA[<p>Here’s an example for multiple images that uses Bootstrap’s Carousel javascript component for a photo slideshow. You don’t need to write any JavaScript, just place some Liquid tags and HTML in your Markdown.</p>

<!--more-->

<p>To automate the layout, a list of images is stored in a frontmatter variable. The post then loops over that list to output the carousel. This is easier than copy-pasting the same HTML for each image.</p>

<p>Here’s the carousel in action.</p>

<div id="carouselExampleControls" class="carousel slide mb-4" data-ride="carousel">
    <div class="carousel-inner">
        
            <div class="carousel-item active">
                <img src="https://images.unsplash.com/photo-1421789665209-c9b2a435e3dc?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=5b1016b885e7438c4633109d77368d4d&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1504626835342-6b01071d182e?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=975855d515c9d56352ee3bfe74287f2b&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=468a8c18f5d811cf03c654b653b5089e&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1506291318501-948562d765d7?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=71ad8e3b7b4bd210182ed5e5c024903b&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1500402448245-d49c5229c564?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=f19c590b253f803a7f9b643c59017160&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
    </div>
    <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<p>(The photos are from <a href="http://www.unsplash.com">Unsplash</a>!)</p>

<p>To create this, put a list of image URLs in your page’s front matter, like this:</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="na">images</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">http://www.something.com/path/to/image1.jpg</span>
  <span class="pi">-</span> <span class="s">http://www.something.com/path/to/image2.jpg</span>
  <span class="pi">-</span> <span class="s">http://www.something.com/path/to/image3.jpg</span></code></pre></figure>

<p>And then add the following block of HTML:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"carouselExampleControls"</span> <span class="na">class=</span><span class="s">"carousel slide mb-4"</span> <span class="na">data-ride=</span><span class="s">"carousel"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"carousel-inner"</span><span class="nt">&gt;</span>
        {% for img in page.images %}
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"carousel-item {% if forloop.first %}active{% endif %}"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"{{ img }}"</span> <span class="na">class=</span><span class="s">"d-block w-100"</span> <span class="na">alt=</span><span class="s">""</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
        {% endfor %}
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"carousel-control-prev"</span> <span class="na">href=</span><span class="s">"#carouselExampleControls"</span> <span class="na">role=</span><span class="s">"button"</span> <span class="na">data-slide=</span><span class="s">"prev"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"carousel-control-prev-icon"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/span&gt;</span>
        <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"sr-only"</span><span class="nt">&gt;</span>Previous<span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"carousel-control-next"</span> <span class="na">href=</span><span class="s">"#carouselExampleControls"</span> <span class="na">role=</span><span class="s">"button"</span> <span class="na">data-slide=</span><span class="s">"next"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"carousel-control-next-icon"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/span&gt;</span>
        <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"sr-only"</span><span class="nt">&gt;</span>Next<span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span></code></pre></figure>

<p>You could extend this idea by combining it with a modal to show the carousel in fullscreen mode.</p>]]></content><author><name></name></author><category term="Friday Theme" /><category term="HTML" /><category term="images" /><category term="Markdown" /><category term="Liquid" /><category term="Carousel" /><category term="Image Gallery" /><summary type="html"><![CDATA[Here’s an example for multiple images that uses Bootstrap’s Carousel javascript component for a photo slideshow. You don’t need to write any JavaScript, just place some Liquid tags and HTML in your Markdown.]]></summary></entry><entry><title type="html">How to set up the Masonry Layout with an Image Lightbox</title><link href="http://localhost:4000/2020/03/01/friday-theme-lightbox.html" rel="alternate" type="text/html" title="How to set up the Masonry Layout with an Image Lightbox" /><published>2020-03-01T00:00:00+08:00</published><updated>2020-03-01T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/01/friday-theme-lightbox</id><content type="html" xml:base="http://localhost:4000/2020/03/01/friday-theme-lightbox.html"><![CDATA[<p>Here’s an example that extends the Masonry layout to add a Lightbox to show each image.</p>

<!--more-->

<p>As before, to automate the layout, a list of images is stored in a frontmatter variable. The post then loops over that list to output the cards. This is easier than copy-pasting the same HTML for each image.</p>

<p>Some Bootstrap HTML is then included in the page to create the lightbox. This is done using the modal and some simple CSS and JS to make it all work together. To have a look at how this works, look at this page in the <a href="https://github.com/sfreytag/friday-theme/tree/master/_posts">GitHub repo</a>.</p>

<p>Here’s the card columns in action. Click each image to open it in a lightbox.</p>

<div class="card-columns">
    
    <div class="card" data-toggle="modal" data-target="#exampleModal" data-img="https://images.unsplash.com/photo-1421789665209-c9b2a435e3dc?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=5b1016b885e7438c4633109d77368d4d&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1421789665209-c9b2a435e3dc?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=5b1016b885e7438c4633109d77368d4d&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" />
    </div>
    
    <div class="card" data-toggle="modal" data-target="#exampleModal" data-img="https://images.unsplash.com/photo-1445962125599-30f582ac21f4?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=38c096c472ba616dc4e8e76a8069c97a&amp;auto=format&amp;fit=crop&amp;w=668&amp;q=80">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1445962125599-30f582ac21f4?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=38c096c472ba616dc4e8e76a8069c97a&amp;auto=format&amp;fit=crop&amp;w=668&amp;q=80" />
    </div>
    
    <div class="card" data-toggle="modal" data-target="#exampleModal" data-img="https://images.unsplash.com/photo-1504626835342-6b01071d182e?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=975855d515c9d56352ee3bfe74287f2b&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1504626835342-6b01071d182e?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=975855d515c9d56352ee3bfe74287f2b&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" />
    </div>
    
    <div class="card" data-toggle="modal" data-target="#exampleModal" data-img="https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=468a8c18f5d811cf03c654b653b5089e&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=468a8c18f5d811cf03c654b653b5089e&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" />
    </div>
    
    <div class="card" data-toggle="modal" data-target="#exampleModal" data-img="https://images.unsplash.com/photo-1506291318501-948562d765d7?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=71ad8e3b7b4bd210182ed5e5c024903b&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1506291318501-948562d765d7?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=71ad8e3b7b4bd210182ed5e5c024903b&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" />
    </div>
    
    <div class="card" data-toggle="modal" data-target="#exampleModal" data-img="https://images.unsplash.com/photo-1500370414137-9201565cf099?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=95e700b9e28eb7ed7b5769c823741126&amp;auto=format&amp;fit=crop&amp;w=668&amp;q=80">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1500370414137-9201565cf099?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=95e700b9e28eb7ed7b5769c823741126&amp;auto=format&amp;fit=crop&amp;w=668&amp;q=80" />
    </div>
    
    <div class="card" data-toggle="modal" data-target="#exampleModal" data-img="https://images.unsplash.com/photo-1500402448245-d49c5229c564?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=f19c590b253f803a7f9b643c59017160&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1500402448245-d49c5229c564?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=f19c590b253f803a7f9b643c59017160&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" />
    </div>
    
</div>

<p>(The photos are from <a href="http://www.unsplash.com">Unsplash</a>!)</p>

<div class="modal fade" id="exampleModal">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body">
        <img class="modal-img w-100" />
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(function() {
    $('#exampleModal').on('show.bs.modal', function (event) {
      var button = $(event.relatedTarget)
      var img = button.data('img')
      var modal = $(this)
      modal.find('.modal-img').attr('src', img)
    })
  })
</script>]]></content><author><name></name></author><category term="Friday Theme" /><category term="HTML" /><category term="images" /><category term="Markdown" /><category term="Liquid" /><category term="Image Gallery" /><summary type="html"><![CDATA[Here’s an example that extends the Masonry layout to add a Lightbox to show each image.]]></summary></entry><entry><title type="html">How to write code, with syntax highlighting</title><link href="http://localhost:4000/2018/03/10/friday-theme-code.html" rel="alternate" type="text/html" title="How to write code, with syntax highlighting" /><published>2018-03-10T00:00:00+08:00</published><updated>2018-03-10T00:00:00+08:00</updated><id>http://localhost:4000/2018/03/10/friday-theme-code</id><content type="html" xml:base="http://localhost:4000/2018/03/10/friday-theme-code.html"><![CDATA[<p>This post demonstrates both inline code and code blocks with syntax highlighting.</p>

<!--more-->

<p>Inline code is done using backticks to create <code class="highlighter-rouge">something like this</code>, which is handy for talking about a specific <code class="highlighter-rouge">variable</code> or a <code class="highlighter-rouge">shortExpression++</code>.</p>

<p>Code blocks are wrapped in the <code class="highlighter-rouge">highlight</code> liquid tag together with a keyword to define the language, like this:</p>

<figure class="highlight"><pre><code class="language-liquid" data-lang="liquid"><span class="p">{%</span><span class="w"> </span><span class="nt">highlight</span><span class="w"> </span>javascript<span class="w"> </span><span class="p">%}</span>
    ...JS here...
<span class="p">{%</span><span class="w"> </span><span class="nt">endhighlight</span><span class="w"> </span><span class="p">%}</span></code></pre></figure>

<h2 id="examples">Examples</h2>

<h3 id="javascript">JavaScript</h3>

<p>Here’s some JavaScript I borrowed from <a href="https://stackoverflow.com/questions/17776940/javascript-module-pattern-with-example">this StackOverflow post</a>:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">modularpattern</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">// your module code goes here</span>
    <span class="kd">var</span> <span class="nx">sum</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span>

    <span class="k">return</span> <span class="p">{</span>
        <span class="na">add</span><span class="p">:</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="nx">sum</span> <span class="o">=</span> <span class="nx">sum</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="k">return</span> <span class="nx">sum</span><span class="p">;</span>
        <span class="p">},</span>
        <span class="na">reset</span><span class="p">:</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>    
        <span class="p">}</span>  
    <span class="p">}</span>   
<span class="p">}());</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">modularpattern</span><span class="p">.</span><span class="nx">add</span><span class="p">());</span>    <span class="c1">// alerts: 1</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">modularpattern</span><span class="p">.</span><span class="nx">add</span><span class="p">());</span>    <span class="c1">// alerts: 2</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">modularpattern</span><span class="p">.</span><span class="nx">reset</span><span class="p">());</span>  <span class="c1">// alerts: 0</span></code></pre></figure>

<h3 id="python">Python</h3>

<p>And here’s some Python from <a href="https://www.tutorialspoint.com/python/python_classes_objects.htm">this tutorial</a>:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">Employee</span><span class="p">:</span>
   <span class="s">'Common base class for all employees'</span>
   <span class="n">empCount</span> <span class="o">=</span> <span class="mi">0</span>

   <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">salary</span><span class="p">):</span>
      <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
      <span class="bp">self</span><span class="p">.</span><span class="n">salary</span> <span class="o">=</span> <span class="n">salary</span>
      <span class="n">Employee</span><span class="p">.</span><span class="n">empCount</span> <span class="o">+=</span> <span class="mi">1</span>
   
   <span class="k">def</span> <span class="nf">displayCount</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
     <span class="k">print</span> <span class="s">"Total Employee %d"</span> <span class="o">%</span> <span class="n">Employee</span><span class="p">.</span><span class="n">empCount</span>

   <span class="k">def</span> <span class="nf">displayEmployee</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
      <span class="k">print</span> <span class="s">"Name : "</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">,</span>  <span class="s">", Salary: "</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">salary</span></code></pre></figure>

<h2 id="supported-languages">Supported Languages</h2>

<p>The highlighting is done with Rouge and at time of writing [their website] says they support 132 languages. I’m not 100% sure if all those are available in the version bundled within Jekyll. If you have successfully installed this theme, then you can run <code class="highlighter-rouge">rougify list</code> from the Terminal and you should get a list of supported languages. Or check out <a href="https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers">this wiki page</a>.</p>]]></content><author><name></name></author><category term="syntax highlighting" /><category term="code" /><summary type="html"><![CDATA[This post demonstrates both inline code and code blocks with syntax highlighting.]]></summary></entry><entry><title type="html">How to use Multiple Images in a Masonry-style layout</title><link href="http://localhost:4000/2017/10/19/friday-theme-multiple-images.html" rel="alternate" type="text/html" title="How to use Multiple Images in a Masonry-style layout" /><published>2017-10-19T00:00:00+08:00</published><updated>2017-10-19T00:00:00+08:00</updated><id>http://localhost:4000/2017/10/19/friday-theme-multiple-images</id><content type="html" xml:base="http://localhost:4000/2017/10/19/friday-theme-multiple-images.html"><![CDATA[<p>Here’s an example for multiple images that uses Bootstrap’s card columns for a Masonry-like layout. It’s not perfect, but with some careful ordering of the images, you can get some good results. This example also shows some Liquid tags used in conjunction with frontmatter variables to automatically create your layout.</p>

<!--more-->

<p>To automate the layout, a list of images is stored in a frontmatter variable. The post then loops over that list to output the cards. This is easier than copy-pasting the same HTML for each image.</p>

<p>Here’s the card columns in action.</p>

<div class="card-columns">
    
    <div class="card">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1421789665209-c9b2a435e3dc?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=5b1016b885e7438c4633109d77368d4d&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" />
    </div>
    
    <div class="card">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1445962125599-30f582ac21f4?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=38c096c472ba616dc4e8e76a8069c97a&amp;auto=format&amp;fit=crop&amp;w=668&amp;q=80" />
    </div>
    
    <div class="card">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1504626835342-6b01071d182e?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=975855d515c9d56352ee3bfe74287f2b&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" />
    </div>
    
    <div class="card">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=468a8c18f5d811cf03c654b653b5089e&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" />
    </div>
    
    <div class="card">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1506291318501-948562d765d7?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=71ad8e3b7b4bd210182ed5e5c024903b&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" />
    </div>
    
    <div class="card">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1500370414137-9201565cf099?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=95e700b9e28eb7ed7b5769c823741126&amp;auto=format&amp;fit=crop&amp;w=668&amp;q=80" />
    </div>
    
    <div class="card">
        <img class="card-img-top" src="https://images.unsplash.com/photo-1500402448245-d49c5229c564?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=f19c590b253f803a7f9b643c59017160&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" />
    </div>
    
</div>

<p>(The photos are from <a href="http://www.unsplash.com">Unsplash</a>!)</p>]]></content><author><name></name></author><category term="Friday Theme" /><category term="HTML" /><category term="images" /><category term="Markdown" /><category term="Liquid" /><category term="Image Gallery" /><summary type="html"><![CDATA[Here’s an example for multiple images that uses Bootstrap’s card columns for a Masonry-like layout. It’s not perfect, but with some careful ordering of the images, you can get some good results. This example also shows some Liquid tags used in conjunction with frontmatter variables to automatically create your layout.]]></summary></entry><entry><title type="html">How to use Icons</title><link href="http://localhost:4000/2017/10/18/friday-theme-icons.html" rel="alternate" type="text/html" title="How to use Icons" /><published>2017-10-18T00:00:00+08:00</published><updated>2017-10-18T00:00:00+08:00</updated><id>http://localhost:4000/2017/10/18/friday-theme-icons</id><content type="html" xml:base="http://localhost:4000/2017/10/18/friday-theme-icons.html"><![CDATA[<p>Here’s how to use the Entypo icons in the Friday Theme as SVGs It’s easy with Jekyll’s include tag and Bootstrap 4 classes.</p>

<!--more-->

<p>Bootstrap 3 shipped with the Glyphicons built-in as icon files and accompanying CSS classes. Bootstrap 4 doesn’t have these, but does point you to some SVG icon libraries. With Jekyll’s include and Bootstrap 4’s flex layout, it’s easy to use the SVGs inline without writing lots of icon-related CSS.</p>

<!--more-->

<h2 id="example">Example</h2>

<p class="d-flex align-items-center">
    <span class="icon grey mr-2">
        <?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 18.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->

<svg version="1.1" id="Clock" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve">
<path d="M10,0.4c-5.303,0-9.601,4.298-9.601,9.6c0,5.303,4.298,9.601,9.601,9.601c5.301,0,9.6-4.298,9.6-9.601
	C19.6,4.698,15.301,0.4,10,0.4z M9.999,17.6c-4.197,0-7.6-3.402-7.6-7.6c0-4.197,3.402-7.6,7.6-7.6c4.197,0,7.601,3.402,7.601,7.6
	C17.6,14.197,14.196,17.6,9.999,17.6z M11,9.33V4H9v6.245l-3.546,2.048l1,1.732l4.115-2.377C10.807,11.511,11,11.175,11,10.9v-0.168
	l4.24-4.166c-0.198-0.271-0.411-0.529-0.647-0.766L11,9.33z" />
</svg>

    </span>
    A clock icon in grey left-aligned
</p>

<p class="d-flex align-items-center">
    A cycle icon in red right-aligned
    <span class="icon red ml-2">
        <?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 18.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->

<svg version="1.1" id="Cycle" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve">
<path d="M5.516,14.224c-2.262-2.432-2.222-6.244,0.128-8.611c0.962-0.969,2.164-1.547,3.414-1.736L8.989,1.8
	C7.234,2.013,5.537,2.796,4.192,4.151c-3.149,3.17-3.187,8.289-0.123,11.531l-1.741,1.752l5.51,0.301l-0.015-5.834L5.516,14.224z
	 M12.163,2.265l0.015,5.834l2.307-2.322c2.262,2.434,2.222,6.246-0.128,8.611c-0.961,0.969-2.164,1.547-3.414,1.736l0.069,2.076
	c1.755-0.213,3.452-0.996,4.798-2.35c3.148-3.172,3.186-8.291,0.122-11.531l1.741-1.754L12.163,2.265z" />
</svg>

    </span>
</p>

<h2 id="source">Source</h2>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"d-flex align-items-center"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"icon grey mr-2"</span><span class="nt">&gt;</span>
        {% include entypo/clock.svg %}
    <span class="nt">&lt;/span&gt;</span>
    A clock icon in grey left-aligned
<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"d-flex align-items-center"</span><span class="nt">&gt;</span>
    A cycle icon in red right-aligned
    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"icon red ml-2"</span><span class="nt">&gt;</span>
        {% include entypo/cycle.svg %}
    <span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;/p&gt;</span></code></pre></figure>

<h2 id="css">CSS</h2>

<p>The markup above uses <code class="highlighter-rouge">.icon</code> to control the icon’s size and and <code class="highlighter-rouge">.red</code> or <code class="highlighter-rouge">.grey</code> as examples of controlling its colour.</p>

<p>Bootstrap takes care of the layout. <code class="highlighter-rouge">d-flex align-items-center</code> ensures the icon is vertically aligned along the center line with the accompanying content and <code class="highlighter-rouge">ml-2</code> and <code class="highlighter-rouge">mr-2</code> take care of horizontal spacing.</p>

<p>The following CSS is already in <code class="highlighter-rouge">theme/css/site.css</code> and can easily be extended for different colours.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nc">.icon</span> <span class="p">{</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">21px</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">21px</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.icon.grey</span> <span class="nt">svg</span> <span class="nt">path</span> <span class="p">{</span>
    <span class="py">fill</span><span class="p">:</span> <span class="m">#999</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.icon.red</span> <span class="nt">svg</span> <span class="nt">path</span> <span class="p">{</span>
    <span class="py">fill</span><span class="p">:</span> <span class="m">#A00</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>]]></content><author><name></name></author><category term="icons" /><category term="Friday Theme" /><category term="CSS" /><summary type="html"><![CDATA[Here’s how to use the Entypo icons in the Friday Theme as SVGs It’s easy with Jekyll’s include tag and Bootstrap 4 classes.]]></summary></entry><entry><title type="html">How to use Single Images</title><link href="http://localhost:4000/2017/10/13/friday-theme-single-image.html" rel="alternate" type="text/html" title="How to use Single Images" /><published>2017-10-13T00:00:00+08:00</published><updated>2017-10-13T00:00:00+08:00</updated><id>http://localhost:4000/2017/10/13/friday-theme-single-image</id><content type="html" xml:base="http://localhost:4000/2017/10/13/friday-theme-single-image.html"><![CDATA[<p>Here’s how to put a single image into a post, using a Bootstrap 4 card. This shows how to mingle Markdown with HTML, too.</p>

<!--more-->

<p>The card allows a caption to be aligned with the photo, and the card classes contain a <code class="highlighter-rouge">card-img-top</code> that ensures the image is responsive within the grid.</p>

<div class="card mb-3">
    <img class="card-img-top" src="https://drscdn.500px.org/photo/127767019/q%3D80_m%3D1500/v2?webp=true&amp;sig=dd1fa4580c459472969cd4992068922f311f12cf263cf08b39615cfc1812286b" />
    <div class="card-body bg-light">
        <div class="card-text">
            The Peak District on a mosty morning.
        </div>
    </div>
</div>

<p>The HTML source for this card is below, or of course you could look at the raw source for this file in the GitHub repo or on your disk after you have downloaded the repo. WHen looking at the source, you can see the Markdown mingled with the HTML.</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card mb-3"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;img</span> <span class="na">class=</span><span class="s">"card-img-top"</span> <span class="na">src=</span><span class="s">"https://drscdn.500px.org/photo/127767019/q%3D80_m%3D1500/v2?webp=true&amp;sig=dd1fa4580c459472969cd4992068922f311f12cf263cf08b39615cfc1812286b"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-body bg-light"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-text"</span><span class="nt">&gt;</span>
            The Peak District on a mosty morning.
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span></code></pre></figure>]]></content><author><name></name></author><category term="Friday Theme" /><category term="HTML" /><category term="images" /><category term="Markdown" /><summary type="html"><![CDATA[Here’s how to put a single image into a post, using a Bootstrap 4 card. This shows how to mingle Markdown with HTML, too.]]></summary></entry></feed>